{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/comment/add": {
            "post": {
                "tags": [
                    "comment"
                ],
                "description": "Add Comment",
                "operationId": "CommentController.Add Comment",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Comment content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    }
                ],
                "responses": {
                    "10000": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "10001": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/comment/get": {
            "post": {
                "tags": [
                    "comment"
                ],
                "description": "Get Post Comment",
                "operationId": "CommentController.Get Comment",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Comment content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    }
                ],
                "responses": {
                    "10000": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "10001": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/count/add": {
            "post": {
                "tags": [
                    "count"
                ],
                "description": "Add Post Count",
                "operationId": "CountController.Add Count",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Count content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Count"
                        }
                    }
                ],
                "responses": {
                    "10000": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "10001": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/count/get": {
            "post": {
                "tags": [
                    "count"
                ],
                "description": "Get Post Count",
                "operationId": "CountController.Get Count",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Count content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Count"
                        }
                    }
                ],
                "responses": {
                    "10000": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "10001": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/qiniu/uptoken_key": {
            "get": {
                "tags": [
                    "qiniu"
                ],
                "description": "Get Uptoken Key",
                "operationId": "QiniuController.Get Uptoken Key",
                "responses": {
                    "10000": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "10001": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/qiniu/uptoken_web": {
            "get": {
                "tags": [
                    "qiniu"
                ],
                "description": "Get Uptoken Web",
                "operationId": "QiniuController.Get Uptoken Web",
                "responses": {
                    "10000": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "10001": {
                        "description": "{struct} helper.RestfulReturn"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Comment": {
            "title": "Comment",
            "type": "object",
            "properties": {
                "commid": {
                    "type": "integer",
                    "format": "int64"
                },
                "content": {
                    "type": "string"
                },
                "delete_time": {
                    "type": "string",
                    "format": "datetime"
                },
                "father_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "son_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "update_time": {
                    "type": "string",
                    "format": "datetime"
                },
                "url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Count": {
            "title": "Count",
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "delete_time": {
                    "type": "string",
                    "format": "datetime"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "count",
            "description": "Operations about count\n"
        },
        {
            "name": "comment",
            "description": "Operations about Comment\n"
        }
    ]
}